SB_LEFT?（済み）
countdown display（済み）
コメントを追加（済み）
ini/config の構成をファイルごとコピーできるようにする。（済み）
ウィンドウを透過できるように。（済み）
フォームのクリックでもカウントダウンを解除する。（済み）
コンテキストメニューに"..."を追加する。（済み）
タスクトレイのツールティップに現在の構成も表示する。（済み）
タブ名を変更できるようにする。（済み）
タブのアイコンをＤ＆Ｄで登録できるようにする。（済み）
環境設定メニューにアイコンを登録する。SetMenuItemBitmaps（済み）
ショートカットが別のタブ名に変更された時、インポートの順番を最後尾にできるオプションを付ける。（済み）
常にオフラインで起動するコマンドラインを追加する。（済み）
ショートカットを解析する。（済み）
テンポラリファイルは先頭に~を付ける。（済み）
アプリ名が url だとアイコン取得が失敗してボタンが表示されないバグがある。（済み）
ボタンのアイコンを個別に設定できるようにする。（済み）
個別アイコン指定を取り消しできるようにする。（済み）
url の場合は favicon.ico をダウンロードしてみる。（済み）
favicon.ico が無い場合の処理を考える。url.dll のアイコンをデフォルトにするようにした。（済み）
http:キャンセルで、保存したfaviconを削除する。（済み）
http:アイコン指定を解除した後、宙ぶらりんになった favicon を削除する。（済み）
http:ダウンロードしたアイコンにＤ＆Ｄで上書きすると、元のアイコンが残ったままになる。（済み）
http:C:\Program Files\Internet Explorer\iexplore.exe 指定ありでアイコンを解除していくと、最終的にexeのアイコンにする。（済み）
解析■□にすると、tooltip が残ったままになる。（済み）
thread から close() すると例外になるので delegate で処理する。（済み）
常にタスクトレイにアイコンを表示する場合、閉じても最小化と同じ動作（messenger と同じ）にする。（済み）
キャンセルでテキストの検証をスキップする。（済み）
~icons（済み）
ウィンドウのテキストを /AppTitle: で設定できるようにし、同一のテキストでは２重起動を防止する。（済み）
' はボタン名に出来ないようにする。（済み）http://support.microsoft.com/kb/308060/ja
offline で前回の構成がいつの間にか読み込まなくなっていたのを修正する。（済み）
tabお気に入り.ico は削除しないようにする。（済み）
ステータスバーに selectedTabPageText を表示する。（済み）
タスクトレイ常駐時に [X] ボタンを押されたら終了ボタンを何秒間か表示する。（済み）
複数のショートカットドロップに対応する。（済み）
オプションの棲み分けを再考する。（済み）
　上書き可能にした。
　　RemoveNoUseLocalProgramsFolder
　　AutoWindowCloseTime
　INI から config に移動した。
　　HideTabPageText
　　ImportTabIndicateEnd -> ImportTabAppearFirst に名前を変更
　　TextEditor
　INI の隠しオプションから config に移動した。
　　ShortcutMngReplyTime
　　AutoOpacityTimePercent
offline の時は \\ ボタンをスキップする。（済み）
ボタンのクリック、ボタンのコンテキストメニューでは透過をキャンセルしない。（済み）
共通設定 -> 動作設定、個別設定 -> 走査設定、構成設定を新設する。（済み）
アプリケーションの環境設定ファイルをオプションから修正できるようにする。（済み）
ccMushroom（済み）
ボタンの背景色を設定可能にする。（済み）
FindTabPage は IndexOfKey で代用できる？（済み）
設定が 0 の時は ExitDlg を表示しないだけにする。（済み）
ccAppEnvironmentSetting.xml をD&Dでインポートできるようにする。（済み）
jjtakeme -> cctakeme, bat ファイルも。（済み）
JjLauncher のプロジェクトを削除する。MediaKeeper からも。（済み）
ccConfiguration.import.xml をＤ＆Ｄでインポートできるようにする。（済み）
"お気に入り" 固定でコーディングしている箇所を defaultTabText に置き換える。（済み）
オプション設定が何もない、起動後に ~ccConfiguration.xml が保存されない時がある。ccConfiguration.import.xml ファイルが上書きされた時？（済み）
ccMushroom.exe.config にも EnabledProgramsFolder を設定できるようにする。（済み）
ccMushroom.ini の [Setting] もＤ＆Ｄでインポートできるようにする。（済み）
App.Config/LocalProgramsFolder の親フォルダを $CCLOCAL$ として、他の設定ファイルで定数として扱うようにする。（済み）
ショートカットも enabled で有効|無効を切り替えられるようにする。（済み）
タブページの背景色を TabPageBackColor/Settings@ccMushroom.ini（拡張設定）で変更できるようにする。（済み）
フォームの背景色を FormBackColor/Settings@ccMushroom.ini（拡張設定）で変更できるようにする。（済み）
ccMushroom.ini のリモート設定に名称を付ける。（済み）
TextEditor で notepad.exe をデフォルトにする。そして SdiTextEditors キーを新設する。（済み）
アプリ動作環境の設定時、ini ファイルのパスが指定されていなかった場合、作業フォルダ（指定があれば）-> 実行ファイルのパス の順でディレクトリをつける。（済み）
ホットキーで最後に選択されたメニューを記憶しておき、次回はそこにマウスポインタを合わせる。（済み）
ボタンをドラッグ＆ドロップで移動できるようにする。（済み）
ccMushSHellExt.dll を使って、エクスプローラの右メニューに統合できるようにする。（済み）
{402ED4A1-8F5B-387A-8688-997ABF58B8F2} (Microsoft Visual C++ 2008 Redistributable Setup) のインストール状態を確認する。（済み）
アドバタイズショートカットの解析にも対応するようにする。（済み）
リモート側の情報が取得できなかった時、それ以降はリモート側の情報を取得しないように EnableIgnoreRemoteInfo/Settings@ccMushroom.ini（拡張設定）で設定できるようにする。（済み）
ホットキーでのコンテキストメニューの選択を記憶しないように ResumeLatestNotifyMenuItem/Settings@ccMushroom.ini（拡張設定）で設定できるようにする。（済み）
dllとexeからアイコンを抽出してアプリケーションのアイコンに設定できるようにする。（済み）
半透明の時はマウスのクリックを通過させるオプションを追加する。（済み）
J1Launcher コンパチのリモート側の設定で、Launcher.xml 以外のファイル名を指定できるようにする。（済み）
ボタン毎に背景色を指定できるようにする。また、IgnoreRemoteButtonBackColor/Settings@ccMushroom.ini（拡張設定）でリモート側の設定色を無視できるようにする。（済み）
アプリケーションに autoExec 属性を追加して、ccMushroom 起動時に自動実行できるようにする。（済み）

更新履歴
Version 2.00
　現在のアプリケーション設定をコマンドラインとして使用する時、'\' と ' ' があって、間に '/' が無ければ、コマンドラインを '"' で囲むようにした。
　タブページの背景に画像を指定できるようにした。
　　これに付随し、ボタンの透過とタブ毎にフォームのサイズを保存できるようにした。
　　ついでに、タブ毎のボタンサイズを設定できるようにした。
　フォームの最大サイズを FormMaximumSize/Settings@ccMushroom.ini（拡張設定）で設定できるようにした。(0,0 でデフォルトの MaximumSize を無視する）
　Click-Through をトグルするホットキーを ToggleClickThroughHotKey/Settings@ccMushroom.ini（拡張設定）で設定できるようにした。
　　Click-Throgh の設定がオフになっていても、自動透過設定になっていれば Click-Through を効くようにした。
　コマンドラインで ExpertMode 指定できるようにした。ExpertMode/Settings@ccMushroom.ini（拡張設定）でも。
　ExpertMode では、拡張設定タブで値を編集できるようにした。（"隠し設定"を"拡張設定"にした）
　バージョン情報を環境設定で表示するようにした。
　[Resume] セクションの不要な "リモート プログラムのフォルダ = 実際のリモート プログラムのディレクトリ" を削除するようにした。
　remoteProgramsName の <loginRequired>@Launcher.xml 毎にログイン要求できるようにした。
　toolStripComboAppEnviron の背景色を ComboAppEnvironColor/Settings@ccMushroom.ini（拡張設定）で設定できるようにした。
　toolStripComboAppEnviron の横幅を適切に調節するようにした。
　ボタンのコンテキストメニューで、「ショートカットを編集する」を上に持ってきた。
　ボタンのドラッグ中はテキストを表示しないようにした。
　タブ毎にテキストの色を設定できるようにした。
　　appButtons[iButton].ForeColor に設定された色はボタンの枠にも反映されるので、SelectedTab.Tag に個別のテキスト色を入れておくようにした。
　　ついでにボタンサイズも .Tag に持つようにした。
　<onceCopy> を廃止して、<copyMode> を新設した。（互換性は保つロジックにした）
　　normal  :通常のコピー処理（デフォルト）（<onceCopy>false</onceCopy>とコンパチ）
　　onceCopy:フォルダのコピーは一度きり（<onceCopy>true</onceCopy>とコンパチ）
　　shortCut:既存のローカルのexeに対するショートカット
　　　　　　 <workingDirectory> の指定が無ければ、コピー先のフォルダを設定する。
　EnableNoNeedLocalFolderRemove/Settings@ccMushroom.ini から EnableRemoveNoUseLocalFolder へ名前を変更した。
　<copyMode>shortCut</copyMode> の時、コマンド ラインを解析して、リモート側のファイルが新しければローカルにコピーするようにした。
　　この際、ファイル名だけの引数はリモート側フォルダを付けて更新日時をチェックするようにした。
　アプリケーションの環境別にフォームの背景色を変えられるようにした。
　ccMushShellExe.dll の登録/解除に失敗した時は HRESULT を表示するようにした。

Version 2.01 2011/02/21
　ボタンのコンテキストメニューに "管理者として実行" を追加した。(Windows 7のみ)
　[ccMushShellExt] 16*16 のアイコンを追加した。(Windows 7用)
　[ccMushShellExt] dll を _ 無しで作成するようにして、UploadProgramFile.bat も修正した。
　ジャンプリストの機能を実装した。(Windows 7のみ)(要 .net framework 4.0)
　コマンド パラメータで "/ButtonText" を追加した。
　タスクバーにタブページ毎のサムネイルを表示するようにした。(Windows 7のみ)
　Shiftキーを押して起動したときは、ccMushroom を前面に持ってくるようにした。
　EnabledTaskbarThumbnail/Settings@ccMushroom.ini を拡張設定で切り替えられるようにした。(Windows 7のみ)
　enabledTaskbarThumbnail が true の時、"このフォーム サイズを保存する" を無効にするようにした。(Windows 7のみ)
　<copyMode> と <onceCopy> が同時に指定されたとき、<onceCopy> の互換性ロジックを通るバグを修正した。
　[_Global Class] AppConfig@CommonFunctions.cs の GetValue 関数で、"ProductName.exe.config" の値取得が常にローカルを読み込んでいたバグを修正した。
　ボタンの移動中は FlatStyle.Popup にするようにした。FlatAppearance で細かく指定してもいい？
　タブの背景プレビューはアスペクト比を固定して表示するようにした。
　ボタンの移動中にタブの背景画像を隠すか否かを HideTabImageDuringButtonDrag/Settings@ccMushroom.ini（拡張設定）で設定できるようにした。
　Windows 7 では、HideTabImageDuringButtonDrag=true をデフォルトにした。
　環境設定の"アプリ環境"の"ボタンを参照する"で、.xls も有効にするようにした。
　<copyMode delLocalFiles="true">@cctakeme.xml で、リモート側のファイルをコピーする前に、ローカル側のファイルを削除するようにした。
　<name|tabIconFile delete="true">@ccMushroom.remote.xml で、ローカル側のタブページのアイコンを削除できるようにした。
　リモート側の設定で、URL を直接指定しても問題無いようにロジックを修正した。（要<copyMode>shortCut</copyMode>）
　新着がある場合は、バルーンで通知するようにした。タブ名(新着数)
　copyMode が shortCut の処理で、リモート側に存在するコマンド ファイルが指定されていた場合、リモート側の新しいファイルを全てローカル側にコピーするようにした。
　とりあえず、空の ccMushroom.chm を作成した。
　　UploadProgramFile.bat: ヘルプをアップロードするステップを追加した。
　　Program.cs: 更新対象ファイルに含めておいた。
　　ccMushroom.cs: F1 キーでヘルプを開けるようにした。
　システム メニューにヘルプ メニューを追加した。
　ヘルプの最新版をチェック出来なかった時に、ヘルプが表示されない不具合を修正した。
　ActiveDirectory ログオン方式に変更した。<logonRequired>@Launcher.xml にタブ名も変更した。
　環境設定の"リモート走査"で ini ファイルをドラッグ＆ドロップして登録する時に、既存の有無判定項目が"リモート側のプログラム フォルダ"になっていたので、"グループ名"に変更した。
　PROGRAM_SUBDIR_NAME_IN_LAUNCHER ロジックを追加した。
　　<Path>@Launcher.xml の設定は、そもそも remoteProgramsName の実ディレクトリを指すはずだが、
　　　マスタ統合の一部の設定（<string Path="current">）ではプログラムフォルダを指すようになっていた。
　　　ソースをよく見ると、ccMushroom のロジックもこれに合わせていたため、<Path> が2重の意味合いを持つようになっていた…。
　　この為に、remoteProgramsName に接続出来なかった時のリカバリ時にボタンが異様に増える現象が発生した。
　　　原因は、~ccConfiguration.xml の remoteProgramsName 属性が全て同じ（プログラムフォルダ）になってしまっていたため。
　　この対策として、<programSubDirName> タグでプログラムフォルダを指定するようにして、Path="current" は廃止した。
　　　新ロジックでは、<Path ignore="true"> として <Path> を無視して、<programSubDirName> の方を見るようにした。
　　　ccMushroom の新バージョンリリース後には、<Path>、Path="current" をコメントにする。
　remoteProgramsName に接続出来なかった時も、バルーンで通知するようにした。
　リモート側の設定にファイル名が指定されているとき、"Launcher" が含まれていなければ、"ccMushroom.remote.xml" のロジックを通るようにした。
　ボタンのツールチップの横幅を ButtonToolTipWidth/Settings@ccMushroom.ini（拡張設定）で設定できるようにした。
　実行環境を .NET Framework 3.5 にした。

Version 2.02 2011/04/27
　環境設定ダイアログで、[リモート走査] タブの "リモート側|ローカル側" ラベルをダブルクリックすると、エクスプローラでフォルダを開くようにした。

Version 2.03 2011/12/14
　ここからジェイデバイスでの修正となる。（ヘルプは未更新）
　再スキャンの２度押しを防止するようにした。
　[Shift] キーが押されて起動したときの挙動を TopMost での切り替えに変更した。
　[Ctrl] + [Shift] キーで、管理者モードで実行するようにした。(Windows 7のみ)
　　右[Shift] キーでアプリを背面にする。
　ボタン名/RunAs@ccMushroom.ini で設定して、管理者モードで実行するようにした。(Windows 7のみ)
　　true   :常に管理者モードで実行する。
　　false  :常にユーザーモードで実行する。
　　toggle :[Ctrl]+[Shift]キーの押下状態でトグルして実行する。
　<onceCopy> にモードを追加した。
　　existCopy:既にコピーされたフォルダにアプリケーションが存在している。（J1Launcher の "ExistCopy" とコンパチ？）
              同一のリモート フォルダに複数のアプリが存在している場合、同一フォルダの複数回コピーを防止するため。
　ReadPrevCcConfiguration 関数の処理前で、既に読み込み済みのリモート フォルダか否かチェックするようにした。
　[Enter]キーの押下でアプリケーションを起動できるようにした。
　TopMost のリリースを解除する時間(秒)を TopMostReleaseTime/Settings@ccMushroom.ini（拡張設定）で設定できるようにした。
　CopyJ1LauncherProgramFiles 関数で、<EXE_INFO ImportCcTakeMeNotOverwriteSetting="Config,Xml,Ini"> と指定されていれば、cctakeme.xml から <notOverwriteConfig|Xml|Ini> をインポートするようにした。
　　この仕様変更により、INI ファイルはデフォルトで上書きするようになった。
　ScanJ1LauncherPrograms 関数内で http://〜 の場合、subDirectory が "\" になっていたので、リモート側に <CmdCaption> と同名のフォルダがあれば、以降のロジックでそれをサブ ディレクトリとして扱うようにした。
　cctakeme.xml に <iconFile> タグで明示的にアイコンが指定されていれば、そのファイルをボタンのアイコンとして登録するようにした。

Version 2.04 2012/11/14
　ここから Visual Studio 2010 のプロジェクトになる。
　ImportCcTakeMeNotOverwriteSetting="Config,Ini" のように複数指定されていたときの xpath が不正になっていたバグを修正した。[2012/10/18]
　WinXP の方のプロジェクトは、Win7 のソースと可能な限り共有（リンク）して、メインの開発環境を Win7 にした。[2012/10/19]
　preview_TabbedThumbnailActivated 関数で、アクティブになったタブページの選択ロジックを修正した。これで、選択後にタブページがダブっていた不具合が解消された？[2012/11/14]
　　SetForegroundWindowDelayTime/Settings@ccMushroom.ini（拡張設定は未実装）で最前面タイマの起動時間を設定できるようにした。
　　最前面タイマが起動した時、ForegroundWindowIndicatorRemoveTime/Settings@ccMushroom.ini（拡張設定は未実装）が設定されていれば、バージョン情報の横に "*" を表示するようにした。

Version 2.05 2014/06/27
　一旦コンテキスト メニューが開かれ、その後本体が非表示になっている時、もう一度 ccMushroom.exe を起動しようとした時にコンテキスト メニューが開かれてしまう不具合を対策した。


今後の予定
　不要なファイルを削除するロジックは、同じリモートフォルダが指定された場合、最初のフォルダに対してだけ、処理する。
　各設定ファイルをプロジェクト？のような感じで、一気に設定できるようにする。
　スプラッシュウィンドウ(GIF)のメッセージを変える。
　ローカル側のiniをリモートの設定で書き換えられるようにする。
　　Remote|LocalProgramsFolderN の設定内容をリモートに置いたファイルで自動的に修正できるようにする。サーバーの移転対応等。
　ヘルプを作成する。
　EnabledProgramsFolder@ccMushroom.exe.config の今後の扱いを考える。オプションで変更できるようにするか、ProgramUpdateRelaunch 関数の overWriteConfigKeys に追加しておいた方がいいかも。
　[ccMushShellExt] コンテキストメニューで表示されるアイコンの背景を透過(OwnerDraw)する。
　環境設定の時、例外以外が原因で失敗したら、警告のメッセージを出すようにする？
　環境設定のショートカット設定画面を「ショートカットの編集」画面に合わせる。
　ショートカットの環境設定をＤ＆Ｄで並び替えができるようにする。
　　ListView でのサンプルはあったが、見た目を詳細のままできないのでボツ…。やるなら ListBox ？

※ Application.StartupPath() は作業ディレクトリではなく、exe のフォルダである。
　 作業ディレクトリは、起動時の Program クラスでカレントディレクトリを何処かに保存しておくのがイイ。
　 OpenFileDialog でカレントディレクトリが変わる為。Reset() か RestoreDirectory = true で防げるが…。

※ App.config は作業ディレクトリを指定しても、必ず exe と同じフォルダから読み込まれる！
　 ユーザ毎の設定を保存するには不適切？
　 App.Configファイルについて
　 http://bbs.wankuma.com/index.cgi?mode=al2&mo=7364&namber=7353&space=0&page=0&KLOG=7
