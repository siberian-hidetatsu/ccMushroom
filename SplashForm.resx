<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        IAGl8eH6k2gdBQQAOw==
</value>
  </data>
</root>